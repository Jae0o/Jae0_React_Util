{
  "version": 3,
  "sources": ["../src/index.ts", "../src/colors/hexToRgba/hexToRgba.ts", "../src/utils/haversineFormula/haversineFormula.ts"],
  "sourcesContent": ["import hexToRgba from \"./colors/hexToRgba/hexToRgba\";\nimport haversineFormula from \"./utils/haversineFormula/haversineFormula\";\n\nexport { hexToRgba, haversineFormula };\n", "import { hexToRgbaFunc } from \"./hexToRgba.type\";\n\n/**\n * HEX \uC0C9\uC0C1 Code\uB97C RGBA\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.\n *\n * @param hex 16\uC9C4\uC218 HEX \uC0C9\uC0C1 \uCF54\uB4DC\uB97C \uC804\uB2EC \uBC1B\uC2B5\uB2C8\uB2E4. (#000, #000000, 000 ,000000)\n * @param options alpha 0 ~ 1 \uC0AC\uC774\uC758 \uAC12\uC744 \uC804\uB2EC\uD558\uC5EC \uD22C\uBA85\uB3C4\uB97C \uC870\uC808\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.\n * @returns rgba(R, G, B, A) string\uAC12\uC744 \uC804\uB2EC\uBC1B\uC2B5\uB2C8\uB2E4.\n */\nconst hexToRgba: hexToRgbaFunc = (hex, options = {}) => {\n  const { alpha = 1 } = options;\n\n  if (typeof alpha !== \"number\" || alpha < 0 || alpha > 1) {\n    throw new Error(\"Invalid alpha value.\");\n  }\n\n  const hexCode = hex.startsWith(\"#\") ? hex.slice(1) : hex;\n\n  if (!hexCode.match(/^[0-9a-f]{3}([0-9a-f]{3})?$/i)) {\n    throw new Error(\"Invalid color code\");\n  }\n\n  const fullHexCode =\n    hexCode.length === 3\n      ? hexCode\n          .split(\"\")\n          .map((char) => char + char)\n          .join(\"\")\n      : hexCode;\n\n  const rgbList = fullHexCode\n    .match(/.{2}/g)\n    ?.map((hexPart) => parseInt(hexPart, 16)) || [0, 0, 0];\n\n  return `rgba(${rgbList.join(\",\")}` + (alpha ? `,${alpha})` : \")\");\n};\n\nexport default hexToRgba;\n", "import { GeoPosition } from \"./haversineFormula.type\";\n\nconst EARTH_RADIUS = 6371;\n\n/**\n * @func getTwoPointDistance\n *\n * \uC704\uB3C4 \uACBD\uB3C4\uB97C \uC9C0\uB2CC \uB450 \uC9C0\uC810 \uC0AC\uC774\uC758 \uAC70\uB9AC\uB97C \uACC4\uC0B0\uD558\uB294 \uACF5\uC2DD\uC785\uB2C8\uB2E4.\n *\n * @param firstPoint \uCCAB \uBC88\uC9F8 \uD3EC\uC778\uD2B8 \uC704\uCE58\uB97C \uC804\uB2EC\uBC1B\uC2B5\uB2C8\uB2E4.\n * @param secondPoint \uB450 \uBC88\uC9F8 \uD3EC\uC778\uD2B8 \uC704\uCE58\uB97C \uC804\uB2EC\uBC1B\uC2B5\uB2C8\uB2E4.\n *\n * \uD568\uC218\uB97C \uD638\uCD9C\uD560\uB54C firstPoint\uC640 secondPoint\uC5D0 \uC804\uB2EC\uD558\uB294 \uC778\uC218\uC758 \uC21C\uC11C\uB97C \uC0C1\uAD00\uC5C6\uC2B5\uB2C8\uB2E4.\n *\n * @returns M \uB2E8\uC704\uB85C \uB450 \uD3EC\uC778\uD2B8\uC758 \uAC70\uB9AC\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4\n */\nconst haversineFormula = (\n  firstPoint: GeoPosition,\n  secondPoint: GeoPosition\n) => {\n  const degLat = (firstPoint.lat - secondPoint.lat) * (Math.PI / 180);\n  const degLng = (firstPoint.lng - secondPoint.lng) * (Math.PI / 180);\n\n  // \uC704\uB3C4\uC640 \uACBD\uB3C4\uB97C \uCC28\uC774\uB97C \uC774\uC6A9\uD55C \uC911\uAC04 \uACC4\uC0B0\uAC12\n  const distanceCalc =\n    Math.sin(degLat / 2) * Math.sin(degLat / 2) +\n    Math.cos(firstPoint.lat * (Math.PI / 180)) *\n      Math.cos(secondPoint.lat * (Math.PI / 180)) *\n      Math.sin(degLng / 2) *\n      Math.sin(degLng / 2);\n\n  // \uC774\uD6C4 \uB8E8\uD2B8\uB97C \uC50C\uC6B4 \uD6C4 \uC5ED\uD0C4\uC820\uD2B8\uB97C \uAD6C\uD55C \uAC12\n  const centralAngle =\n    2 * Math.atan2(Math.sqrt(distanceCalc), Math.sqrt(1 - distanceCalc));\n\n  const distance = EARTH_RADIUS * centralAngle * 1000; // Distance in m\n\n  return distance;\n};\n\nexport default haversineFormula;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACSA,IAAM,YAA2B,CAAC,KAAK,UAAU,CAAC,MAAM;AACtD,QAAM,EAAE,QAAQ,EAAE,IAAI;AAEtB,MAAI,OAAO,UAAU,YAAY,QAAQ,KAAK,QAAQ,GAAG;AACvD,UAAM,IAAI,MAAM,sBAAsB;AAAA,EACxC;AAEA,QAAM,UAAU,IAAI,WAAW,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI;AAErD,MAAI,CAAC,QAAQ,MAAM,8BAA8B,GAAG;AAClD,UAAM,IAAI,MAAM,oBAAoB;AAAA,EACtC;AAEA,QAAM,cACJ,QAAQ,WAAW,IACf,QACG,MAAM,EAAE,EACR,IAAI,CAAC,SAAS,OAAO,IAAI,EACzB,KAAK,EAAE,IACV;AAEN,QAAM,UAAU,YACb,MAAM,OAAO,GACZ,IAAI,CAAC,YAAY,SAAS,SAAS,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;AAEvD,SAAO,QAAQ,QAAQ,KAAK,GAAG,CAAC,MAAM,QAAQ,IAAI,KAAK,MAAM;AAC/D;AAEA,IAAO,oBAAQ;;;ACnCf,IAAM,eAAe;AAcrB,IAAM,mBAAmB,CACvB,YACA,gBACG;AACH,QAAM,UAAU,WAAW,MAAM,YAAY,QAAQ,KAAK,KAAK;AAC/D,QAAM,UAAU,WAAW,MAAM,YAAY,QAAQ,KAAK,KAAK;AAG/D,QAAM,eACJ,KAAK,IAAI,SAAS,CAAC,IAAI,KAAK,IAAI,SAAS,CAAC,IAC1C,KAAK,IAAI,WAAW,OAAO,KAAK,KAAK,IAAI,IACvC,KAAK,IAAI,YAAY,OAAO,KAAK,KAAK,IAAI,IAC1C,KAAK,IAAI,SAAS,CAAC,IACnB,KAAK,IAAI,SAAS,CAAC;AAGvB,QAAM,eACJ,IAAI,KAAK,MAAM,KAAK,KAAK,YAAY,GAAG,KAAK,KAAK,IAAI,YAAY,CAAC;AAErE,QAAM,WAAW,eAAe,eAAe;AAE/C,SAAO;AACT;AAEA,IAAO,2BAAQ;",
  "names": []
}
